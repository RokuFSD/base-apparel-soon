/*=================== GOOGLE FONTS ===========================*/

@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@300;400;600&display=swap");

/*=================== VARIABLES =======================*/

$header-height: 5rem;

/*================== Breakpoints =====================*/

$breakpoints: (
  "medium": (
    min-width: 800px,
  ),
  "large": (
    min-width: 1000px,
  ),
);

/*================== Colors ===================*/

$pr-desaturated-red: hsl(0, 36%, 70%);
$pr-soft-red: hsl(0, 93%, 68%);

$nt-grayish-red: hsl(0, 6%, 24%);

$pr-gradient-from: hsl(0, 0%, 100%);
$pr-gradient-to: hsl(0, 100%, 98%);

$sd-gradient-from: hsl(0, 80%, 86%);
$sd-gradient-to: hsl(0, 74%, 74%);

/*================= Font Sizes ===================*/

$body-size: 16px;

/*================= Font Weights ==================*/

$font-small: 300;
$font-regular: 400;
$font-bold: 600;

/*==================== MIXINS =====================*/

@mixin flex-container($direction, $main, $cross, $wrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $main;
  align-items: $cross;
  flex-wrap: $wrap;
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn 'No value could be retrieved from `#{$breakpoint}`.';
  }
}

@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  background: linear-gradient($orientation, $start-color, $end-color);
}

/*===================== BASE ======================*/

*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  height: 100vh;
}

body {
  @include gradient($pr-gradient-from, $pr-gradient-to, 135deg);
  height: 100%;
  font-size: $body-size;
  grid-template-areas:
    "header"
    "hero"
    "landing"
    "footer";
  font-family: "Josefin Sans", sans-serif;

  /*=============== DESKTOP ================*/

  @include respond-to("large") {
    width: 100%;
    margin: auto;
    grid-template-areas:
      "header hero"
      "landing hero"
      "footer hero";
    grid-template-columns: auto min(40%, 610px);
    grid-template-rows: min-content;
    background: url(../images/bg-pattern-desktop.svg);
    background-repeat: no-repeat;
    background-size: cover;
  }
}

h1 {
  font-size: 2.5em;
  font-weight: $font-bold;
}

/*======================= HEADER =====================*/

.header {
  width: 100%;
  grid-area: header;
  padding-block: 2em;

  &__logo {
    @include flex-container(row, flex-start, center, nowrap);
    padding: 0 max(2rem, 50vw - 375px / 2);

    .logo {
      width: 7rem;
    }
  }

  /*=============== DESKTOP ================*/

  @include respond-to("large") {
    max-width: 30rem;
    place-self: center;

    &__logo {
      padding: 2rem 0;
      .logo {
        min-width: 9rem;
      }
    }
  }
}

/*======================= HERO ============================*/

.hero {
  grid-area: hero;
  width: min(100%, 375px);
  min-height: 280px;
  background: url(../images/hero-mobile.jpg);
  background-size: cover;
  background-repeat: no-repeat;

  @include respond-to("large") {
    width: 100%;
    min-height: 100%;
    background: url(../images/hero-desktop.jpg);
    background-size: cover;
  }
}

/*======================= MAIN =========================*/

.landing {
  grid-area: landing;
  text-align: center;
  max-width: 30rem;

  &__info {
    padding: 3rem 1.6rem 0;
    text-align: center;

    &-title {
      color: $nt-grayish-red;
      text-transform: uppercase;
      letter-spacing: 0.75rem;

      span {
        color: $pr-desaturated-red;
        font-weight: $font-small;
      }
    }

    &-para {
      padding: 1rem 0 0;
      line-height: 1.5;
      font-size: 0.9em;
      margin-inline: auto;
      color: $pr-desaturated-red;
    }
  }

  &__form {
    padding: 3rem 1.6rem 0;
    position: relative;
    margin: 0 auto;

    input[type="email"],
    button {
      border: none;
      border-radius: 4.5rem;
      height: 3rem;
    }

    input[type="email"] {
      width: 100%;
      outline: 0.1px solid rgb($nt-grayish-red, 0.2);
      padding-left: 1.25rem;
      background: none;
      color: $nt-grayish-red;
      font-family: inherit;
      font-weight: $font-bold;

      &::placeholder {
        color: $pr-desaturated-red;
      }
    }

    .error {
      outline: 2px solid $pr-soft-red !important;
    }

    .error-text {
      font-size: 0.8em;
      position: absolute;
      left: 0;
      padding-left: 2.8rem;
      bottom: -1.5rem;
      font-weight: $font-bold;
      color: $sd-gradient-to;

      @include respond-to("large") {
        padding-left: 1.2rem;
      }
    }

    .error-icon {
      display: none;
      position: absolute;
      bottom: 0.75rem;
      right: 105px;
    }

    button {
      @include gradient($sd-gradient-from, $sd-gradient-to, 135deg);
      @include flex-container(row, center, center, wrap);
      box-shadow: 0px 12px 23px -5px rgba(0, 0, 0, 0.2);
      position: absolute;
      min-width: 4rem;
      bottom: 0;
      right: 1.6rem;
      cursor: pointer;
      transition: background 0.5s linear;

      svg path {
        stroke-width: 2.2;
      }

      &:hover {
        background: $sd-gradient-from;
      }
    }
  }

  /*=============== DESKTOP ================*/

  @include respond-to("large") {
    margin-inline: auto;
    padding-inline: 0 2rem;

    &__info {
      text-align: left;
      padding-inline: 0;

      &-title {
        font-size: 3.5em;
        letter-spacing: 1rem;
      }

      &-para {
        font-size: 1em;
      }
    }

    &__form {
      padding-inline: 0;

      input[type="email"] {
        font-size: inherit;
      }

      button {
        min-width: 5.5rem;
        right: 0;
      }
    }
  }
}

.footer {
  padding-block-start: 3rem;
  grid-area: footer;
  font-size: .7em;

  a {
    color: $pr-soft-red;
  }

  @include respond-to('large'){
    font-size: .8em;
  }
}
